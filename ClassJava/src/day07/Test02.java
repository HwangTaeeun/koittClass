package day07;

/*
	클래스 하나를 제작을 하면
	그 하나를 가지고 객체를 여러개 만들어서 사용할 수 있다.
	
	우리가 제작하는 클래스는 
	붕어빵으로 생각한다면 붕어빵 틀에 해당하고
	그 틀에서 찍어낸 붕어빵이 객체가 되는데
	하나의 틀에서 여러개의 붕어빵을 만들 수 있으므로
	객체도 하나의 클래스에서 여러개 만들 수 있다.
	
	이때 붕어빵에는
	크림붕어빵 치즈붕어빵, 단팥붕어, 피자붕어빵 도 찍어 낼 수 있다.
	이 이야기는 객체들마다 객체에 저장된 내용이 달라질 수 도 있다.
	
	결론]
		객체는 만들어지면 각 객체들이 별도로 작동한다.
		
======================================================================================================

	전역변수
		==> 선언된(만들어진) 블럭( {} )내의 모든 곳에서 사용될 수 있는 변수
		
			if(a < 10) {
			
			}
			
			
			==> 이 조건문의 영역은 {} 내부를 의미하고
			 	그 영역안에서 만들어진 변수는 그 영역내부의 모든곳에서 사용이 가능하다.
			 	
			 	==> if 조건문 입력에서 생각 할 경우 전역변수가 된다.
			 	
			클래스를 제작을 할 때
				
				public class Test {
				
				}
			
			영역을 정해놓고 클래스를 만들기 때문에
			그 영역 안(블럭 바로 아래에)에서 변수를 만든다면
			클래스 내의 모든곳에서 사용할 수 있다.
		
	지역변수
		==> 해당 지역에서만 사용할 수 있는 변수
			
			예]
				
				for(int i = 0 ; i < 10 ; i++) { }
				
				==>  이 경우 변수 i는 for 반복문 안에서만 사용할 수 있는 지역변수이다.
				==> i를 for 반복문 입장에서 볼 경우에는 전역변수가 될 것이다.
				
				
	==> 하지만
			지역변수냐 아니면 전역변수냐 를 구분하는 기준 영역은 클래스가 된다.
			
			
=======================================================================================================
	
	전역변수는 자동초기화가 된다.
	전역변수는 클래스의 멤버로 선언이 되고
	클래스는 Heap 영역에 인스턴스를 만들게 되는데 
	Heap영역에 만들어지는 변수들은 모두 자동 초기화가 된다. (단, 기본데이터타입에 한해서...)
	
		예]
			int[] num = new int[10];
			
			
	전역변수가 탄생하는 순간
		==> 인스턴스가 만들어지는 순간 ( new  시키는 순간 )
	소멸시점
		==> 프로그램이 종료되는 순간
		
=====================================================================================================
	객체의 배열
		==> 하나의 클래스로 객체를 여러개 만들수 있으므로
			배열로 만들어서 관리도 할 수 있다.
			
			
		만드는 방법 ]
			
			클래스이름[] 변수이름;
			변수이름 = new 클래스이름[길이];
			
			변수이름[0] = new 클래스이름();
			변수이름[1] = new 클래스이름();
			...
			변수이름[길이 - 1] = new 클래스이름();
			
		
 */

import java.util.*;

public class Test02 {
	int num;
	float flt;
	boolean bool;
	char ch;
	
	float[] fl = new float[5];
	String[] str = new String[5];

	public Test02() {
	}

	public static void main(String[] args) {
		Test02 t1 = new Test02();
		System.out.println(Arrays.toString(t1.fl));
		System.out.println(Arrays.toString(t1.str));
		System.out.println("---------------------------------------------------------");
		System.out.println("num : " + t1.num);
		System.out.println("flt : " + t1.flt);
		System.out.println("bool : " + t1.bool);
		System.out.println("ch : |" + t1.ch + "|");
	}

}
