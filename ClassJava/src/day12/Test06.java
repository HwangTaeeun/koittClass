package day12;

import java.util.regex.*;

public class Test06 {
/*
	정규식 검사
		==> 주어진 문자열이 특정한 규칙에 맞도록 만들어져 있는지 확인하는 작업
			예]
				주민등록번호는 6자리-7자리 숫자로 구성되어야 한다.
				아이디는 첫글자는 영문자로 시작하고 길이는 8자리 이상이고 
					영대소문자로 이루어져야 하는 경우
				비밀번호는 8글자이상이고 영대소문자, 숫자, 특수문자가 반드시 포함되어야 한다.
				
		사용하는 클래스
			java.util.regex.Pattern
				==> 정규식 검사에 사용할 정규식 문법을 지정하는 클래스
					문자열의 구성 패턴을 정하는 클래스
			java.util.regex.Matcher
				==> 문자열 구성 패턴을 가지고 
				 	그 패턴에 맞는지를 검사하는 클래스
				 	
				 	
	참고]
		정규식 문법
			
			1. c[a-z]*
				==> 문자를 기록하면 반드시 그 위치에 해당 문자가 와야 한다.
					[ ] 안에 기록하면 그중 하나가 와야 한다.
					*  는 바로 앞에 지정한 글자가 0개이상 올 수 있다.
				
				==> 첫글자가 c로 시작하는 소문자 문자열
					"c" 도 허용
					c 이후에 소문자가 갯수에 상관없이 몇개가 와도 된다.
			2. c[a-z]
				==> c 로 시작하고 다음글자는 반드시 소문자가 와야한다.
			3. c[a-zA-Z]
				==> c 로 시작하고 다음 글자는 영문자가 와야 한다.
			4. c[a-zA-Z0-9]
				==> c 로 시작하고 다음글자는 영문자나 숫자가 와야 한다.
				==> c\w 로 표현 가능하다.
			5. .*
				==> . 은 모든 문자(알파벳과 한글 까지 포함)을 의미한다.
				==> 어떤 문자가 와도 상관없다.
			6. c.
				==> c 로 시작하는 모든 문자로 된 두 글자 
			7. c.*
				==> c 로 시작하는 모든 문자열
			8. c\.
				==> \. 은 만드시 .이 와야한다.
			9. c\d
				==> \d 숫자형의 문자를 의미
				==> 첫글자는 c이고 두번째 글자는 숫자형태의 문자가 와야한다.
					c[0-9] 와 같은 의미
			10. c.*t
				==> 첫글자는 c 가 와야하고
					중간에 문자가 몇글자가 와도 상관없지만
					끝나는 문자는 반드시 t 로 끝나야 한다.
			11. [b|c].*
				==> [b|c]  b 또는 c 가 한글자 와야한다.
				==> 첫문자가 b 또는 c로 시작하는 모든 문자열
				
				ab[t|q]  ==> abt 또는 abq 만 된다.
				
			12. [^b|c]
				==> ^	는 not 의 의미
				==> b나 c 가 오면 안된다.
			13. .*a.*
				==> a가 포함된 모든 문자열이 된다.
			14. .*a.+
				==> *	0개이상을 의미
				==> + 	1개이상
				==> 뒤에서 두번째 이상에 a 가 포함된 문자열
				
				예]
					.*a[0-9]+
			15. [b|c].{2}
				==> {숫자} 는 문자의 갯수를 의미
				==> b 또는 c가 오고 이후에 모든 문자가 2개 와야 한다.
				
			16. .{2,3}
				==> 모든문자가 2개에서 3개까지 올수 있다.
			17. ^a
				==> a 로 시작하는 문자열
			18. z$
				==> z로 끝나는 문자열
				==> 
			
 */
	
	public Test06() {
		// 전화번호 정규식 패턴을 만들고 검사해보자.
		String tel = "010-1234-5678";
		// 먼저 패턴을 만들고
		Pattern form = Pattern.compile("^0[0-9]{1,2}-\\d{3,4}-\\d{4}$");
		// 검사를하고
		Matcher match = form.matcher(tel);
		// 결과를 확인하고
		String result = "형식에 맞지 않습니다.";
		if(match.matches()) {
			result = "올바른 전화번호 입니다.";
		}
		
		System.out.println("[ " + tel + " ] 은 " + result);
		
	}

	public static void main(String[] args) {
		new Test06();
	}

}
